name: CI/CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main
    
jobs:
  # Quality checks
  lint-api:
    name: üîç Lint and Type Check API
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: ./api/yarn.lock

    - name: Install layer dependencies
      working-directory: ./api/layers/deps
      run: yarn install

    - name: Install dependencies
      working-directory: ./api
      run: yarn install

    - name: Run lint
      working-directory: ./api
      run: yarn run lint

    - name: Type check
      working-directory: ./api
      run: yarn run build

  # Development environment deployments
  deploy-database-dev:
    name: üóÑÔ∏è Deploy Database to DEV
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: serverless deploy
      uses: serverless/github-action@v4
      with:
        args: -c "cd ./db && serverless deploy --stage dev"
        entrypoint: /bin/sh
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}

  deploy-api-dev:
    name: üöÄ Deploy API to DEV
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: deploy-database-dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: serverless deploy
      uses: serverless/github-action@v4
      with:
        args: -c "cd ./api && serverless deploy --stage dev"
        entrypoint: /bin/sh
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}

  # Production environment deployments
  deploy-database-prod:
    name: üóÑÔ∏è Deploy Database to PROD
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: prod

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: serverless deploy
      uses: serverless/github-action@v4
      with:
        args: -c "cd ./db && serverless deploy --stage prod"
        entrypoint: /bin/sh
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}

  deploy-api-prod:
    name: üöÄ Deploy API to PROD
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: prod
    needs: deploy-database-prod

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: serverless deploy
      uses: serverless/github-action@v4
      with:
        args: -c "cd ./api && serverless deploy --stage prod"
        entrypoint: /bin/sh
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}
