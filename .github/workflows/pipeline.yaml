name: CI/CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main
    
jobs:
  lint-api:
    name: Lint and Type Check API
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      working-directory: ./api
      run: npm install

    - name: Run lint
      working-directory: ./api
      run: npm run lint

    - name: Type check
      working-directory: ./api
      run: npm run build

  deploy-api-dev:
    name: Deploy API stack to dev stage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      working-directory: ./api
      run: npm install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

    - name: Serverless Authentication
      working-directory: ./api
      run: npx serverless login --provider-token=${{ secrets.SERVERLESS_ACCESS_TOKEN }}
  
    - name: Build and Deploy
      working-directory: ./api
      run: npx serverless deploy --stage dev

  deploy-prod:
    name: Deploy API stack to prod stage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      working-directory: ./api
      run: npm install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

    - name: Serverless Authentication
      working-directory: ./api
      run: npx serverless login --provider-token=${{ secrets.SERVERLESS_ACCESS_TOKEN }}
  
    - name: Build and Deploy
      working-directory: ./api
      run: npx serverless deploy --stage prod

  deploy-database-dev:
    name: Deploy Database stack to dev stage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      working-directory: ./db
      run: npm i -g serverless

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

    - name: Serverless Authentication
      working-directory: ./db
      run: npx serverless login --provider-token=${{ secrets.SERVERLESS_ACCESS_TOKEN }}
  
    - name: Build and Deploy
      working-directory: ./db
      run: npx serverless deploy --stage dev

  deploy-database-prod:
    name: Deploy Database stack to prod stage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      working-directory: ./db
      run: npm i -g serverless

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

    - name: Serverless Authentication
      working-directory: ./db
      run: npx serverless login --provider-token=${{ secrets.SERVERLESS_ACCESS_TOKEN }}
  
    - name: Build and Deploy
      working-directory: ./db
      run: npx serverless deploy --stage prod